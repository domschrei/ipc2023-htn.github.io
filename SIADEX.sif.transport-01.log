
Root:0-1-
===
Tarea:0

(:method m_deliver_ordering_0
:precondition
      (and
         (type_member_location city_loc_1)
         (type_member_location city_loc_0)
         (type_member_package package_0)
         (type_member_vehicle truck_0)
      )

:tasks (
   (get_to truck_0 city_loc_1)
   (load truck_0 city_loc_1 package_0)
   (get_to truck_0 city_loc_0)
   (unload truck_0 city_loc_0 package_0)
)
)
===
Tarea:2

(:method m_drive_to_ordering_0
:precondition
      (and
         (type_member_location city_loc_2)
         (type_member_location city_loc_1)
         (type_member_vehicle truck_0)
      )

:tasks (
   (drive truck_0 city_loc_2 city_loc_1)
)
)
===
Tarea:6

(:method method1
:precondition
      (and
         (type_member_vehicle truck_0)
         (type_member_location city_loc_2)
         (type_member_location city_loc_1)
      )

:tasks (
   (drive_primitive truck_0 city_loc_2 city_loc_1)
)
)
===
Tarea:7

===
Tarea:3

(:method m_load_ordering_0
:precondition
      (and
         (type_member_location city_loc_1)
         (type_member_package package_0)
         (type_member_capacity_number capacity_0)
         (type_member_capacity_number capacity_1)
         (type_member_vehicle truck_0)
      )

:tasks (
   (pick_up truck_0 city_loc_1 package_0 capacity_0 capacity_1)
)
)
===
Tarea:9

(:method method1
:precondition
      (and
         (type_member_vehicle truck_0)
         (type_member_location city_loc_1)
         (type_member_package package_0)
         (type_member_capacity_number capacity_0)
         (type_member_capacity_number capacity_1)
      )

:tasks (
   (pick_up_primitive truck_0 city_loc_1 package_0 capacity_0 capacity_1)
)
)
===
Tarea:10

===
Tarea:4

(:method m_drive_to_ordering_0
:precondition
      (and
         (type_member_location city_loc_1)
         (type_member_location city_loc_0)
         (type_member_vehicle truck_0)
      )

:tasks (
   (drive truck_0 city_loc_1 city_loc_0)
)
)
===
Tarea:12

(:method method1
:precondition
      (and
         (type_member_vehicle truck_0)
         (type_member_location city_loc_1)
         (type_member_location city_loc_0)
      )

:tasks (
   (drive_primitive truck_0 city_loc_1 city_loc_0)
)
)
===
Tarea:13

===
Tarea:5

(:method m_unload_ordering_0
:precondition
      (and
         (type_member_location city_loc_0)
         (type_member_package package_0)
         (type_member_capacity_number capacity_0)
         (type_member_capacity_number capacity_1)
         (type_member_vehicle truck_0)
      )

:tasks (
   (drop truck_0 city_loc_0 package_0 capacity_0 capacity_1)
)
)
===
Tarea:15

(:method method1
:precondition
      (and
         (type_member_vehicle truck_0)
         (type_member_location city_loc_0)
         (type_member_package package_0)
         (type_member_capacity_number capacity_0)
         (type_member_capacity_number capacity_1)
      )

:tasks (
   (drop_primitive truck_0 city_loc_0 package_0 capacity_0 capacity_1)
)
)
===
Tarea:16

===
Tarea:1

(:method m_deliver_ordering_0
:precondition
      (and
         (type_member_location city_loc_1)
         (type_member_location city_loc_2)
         (type_member_package package_1)
         (type_member_vehicle truck_0)
      )

:tasks (
   (get_to truck_0 city_loc_1)
   (load truck_0 city_loc_1 package_1)
   (get_to truck_0 city_loc_2)
   (unload truck_0 city_loc_2 package_1)
)
)
===
Tarea:18

(:method m_drive_to_ordering_0
:precondition
      (and
         (type_member_location city_loc_0)
         (type_member_location city_loc_1)
         (type_member_vehicle truck_0)
      )

:tasks (
   (drive truck_0 city_loc_0 city_loc_1)
)
)
===
Tarea:22

(:method method1
:precondition
      (and
         (type_member_vehicle truck_0)
         (type_member_location city_loc_0)
         (type_member_location city_loc_1)
      )

:tasks (
   (drive_primitive truck_0 city_loc_0 city_loc_1)
)
)
===
Tarea:23

===
Tarea:19

(:method m_load_ordering_0
:precondition
      (and
         (type_member_location city_loc_1)
         (type_member_package package_1)
         (type_member_capacity_number capacity_0)
         (type_member_capacity_number capacity_1)
         (type_member_vehicle truck_0)
      )

:tasks (
   (pick_up truck_0 city_loc_1 package_1 capacity_0 capacity_1)
)
)
===
Tarea:25

(:method method1
:precondition
      (and
         (type_member_vehicle truck_0)
         (type_member_location city_loc_1)
         (type_member_package package_1)
         (type_member_capacity_number capacity_0)
         (type_member_capacity_number capacity_1)
      )

:tasks (
   (pick_up_primitive truck_0 city_loc_1 package_1 capacity_0 capacity_1)
)
)
===
Tarea:26

===
Tarea:20

(:method m_drive_to_ordering_0
:precondition
      (and
         (type_member_location city_loc_1)
         (type_member_location city_loc_2)
         (type_member_vehicle truck_0)
      )

:tasks (
   (drive truck_0 city_loc_1 city_loc_2)
)
)
===
Tarea:28

(:method method1
:precondition
      (and
         (type_member_vehicle truck_0)
         (type_member_location city_loc_1)
         (type_member_location city_loc_2)
      )

:tasks (
   (drive_primitive truck_0 city_loc_1 city_loc_2)
)
)
===
Tarea:29

===
Tarea:21

(:method m_unload_ordering_0
:precondition
      (and
         (type_member_location city_loc_2)
         (type_member_package package_1)
         (type_member_capacity_number capacity_0)
         (type_member_capacity_number capacity_1)
         (type_member_vehicle truck_0)
      )

:tasks (
   (drop truck_0 city_loc_2 package_1 capacity_0 capacity_1)
)
)
===
Tarea:31

(:method method1
:precondition
      (and
         (type_member_vehicle truck_0)
         (type_member_location city_loc_2)
         (type_member_package package_1)
         (type_member_capacity_number capacity_0)
         (type_member_capacity_number capacity_1)
      )

:tasks (
   (drop_primitive truck_0 city_loc_2 package_1 capacity_0 capacity_1)
)
)
===
Tarea:32

===
?v <- truck_0
?l1 <- city_loc_1
?l1 <- city_loc_2
?s2 <- capacity_1
?s1 <- capacity_0
?l1 <- city_loc_1
?s2 <- capacity_1
?s1 <- capacity_0
?v <- truck_0
?l1 <- city_loc_1
?l1 <- city_loc_0
?s2 <- capacity_1
?s1 <- capacity_0
?l1 <- city_loc_1
?s2 <- capacity_1
?s1 <- capacity_0
===
Lista de tareas: 
[0] <i> :unexpanded (deliver package_0 city_loc_0)
[1] <i> :unexpanded (deliver package_1 city_loc_2)
[2] <i> :unexpanded (get_to truck_0 city_loc_1)
[3] <i> :unexpanded (load truck_0 city_loc_1 package_0)
[4] <i> :unexpanded (get_to truck_0 city_loc_0)
[5] <i> :unexpanded (unload truck_0 city_loc_0 package_0)
[6] <i> :unexpanded (drive truck_0 city_loc_2 city_loc_1)
[7] <i> :unexpanded (drive_primitive truck_0 city_loc_2 city_loc_1)
[8] :action (drive_primitive truck_0 city_loc_2 city_loc_1)
[9] <i> :unexpanded (pick_up truck_0 city_loc_1 package_0 capacity_0 capacity_1)
[10] <i> :unexpanded (pick_up_primitive truck_0 city_loc_1 package_0 capacity_0 capacity_1)
[11] :action (pick_up_primitive truck_0 city_loc_1 package_0 capacity_0 capacity_1)
[12] <i> :unexpanded (drive truck_0 city_loc_1 city_loc_0)
[13] <i> :unexpanded (drive_primitive truck_0 city_loc_1 city_loc_0)
[14] :action (drive_primitive truck_0 city_loc_1 city_loc_0)
[15] <i> :unexpanded (drop truck_0 city_loc_0 package_0 capacity_0 capacity_1)
[16] <i> :unexpanded (drop_primitive truck_0 city_loc_0 package_0 capacity_0 capacity_1)
[17] :action (drop_primitive truck_0 city_loc_0 package_0 capacity_0 capacity_1)
[18] <i> :unexpanded (get_to truck_0 city_loc_1)
[19] <i> :unexpanded (load truck_0 city_loc_1 package_1)
[20] <i> :unexpanded (get_to truck_0 city_loc_2)
[21] <i> :unexpanded (unload truck_0 city_loc_2 package_1)
[22] <i> :unexpanded (drive truck_0 city_loc_0 city_loc_1)
[23] <i> :unexpanded (drive_primitive truck_0 city_loc_0 city_loc_1)
[24] :action (drive_primitive truck_0 city_loc_0 city_loc_1)
[25] <i> :unexpanded (pick_up truck_0 city_loc_1 package_1 capacity_0 capacity_1)
[26] <i> :unexpanded (pick_up_primitive truck_0 city_loc_1 package_1 capacity_0 capacity_1)
[27] :action (pick_up_primitive truck_0 city_loc_1 package_1 capacity_0 capacity_1)
[28] <i> :unexpanded (drive truck_0 city_loc_1 city_loc_2)
[29] <i> :unexpanded (drive_primitive truck_0 city_loc_1 city_loc_2)
[30] :action (drive_primitive truck_0 city_loc_1 city_loc_2)
[31] <i> :unexpanded (drop truck_0 city_loc_2 package_1 capacity_0 capacity_1)
[32] <i> :unexpanded (drop_primitive truck_0 city_loc_2 package_1 capacity_0 capacity_1)
[33] :action (drop_primitive truck_0 city_loc_2 package_1 capacity_0 capacity_1)
###
:action (drive_primitive truck_0 city_loc_2 city_loc_1)
:action (pick_up_primitive truck_0 city_loc_1 package_0 capacity_0 capacity_1)
:action (drive_primitive truck_0 city_loc_1 city_loc_0)
:action (drop_primitive truck_0 city_loc_0 package_0 capacity_0 capacity_1)
:action (drive_primitive truck_0 city_loc_0 city_loc_1)
:action (pick_up_primitive truck_0 city_loc_1 package_1 capacity_0 capacity_1)
:action (drive_primitive truck_0 city_loc_1 city_loc_2)
:action (drop_primitive truck_0 city_loc_2 package_1 capacity_0 capacity_1)
==>
6 drive truck_0 city_loc_2 city_loc_1
9 pick_up truck_0 city_loc_1 package_0 capacity_0 capacity_1
12 drive truck_0 city_loc_1 city_loc_0
15 drop truck_0 city_loc_0 package_0 capacity_0 capacity_1
22 drive truck_0 city_loc_0 city_loc_1
25 pick_up truck_0 city_loc_1 package_1 capacity_0 capacity_1
28 drive truck_0 city_loc_1 city_loc_2
31 drop truck_0 city_loc_2 package_1 capacity_0 capacity_1
root 0 1
0 deliver package_0 city_loc_0 -> m_deliver_ordering_0 2 3 4 5
2 get_to truck_0 city_loc_1 -> m_drive_to_ordering_0 6
3 load truck_0 city_loc_1 package_0 -> m_load_ordering_0 9
4 get_to truck_0 city_loc_0 -> m_drive_to_ordering_0 12
5 unload truck_0 city_loc_0 package_0 -> m_unload_ordering_0 15
1 deliver package_1 city_loc_2 -> m_deliver_ordering_0 18 19 20 21
18 get_to truck_0 city_loc_1 -> m_drive_to_ordering_0 22
19 load truck_0 city_loc_1 package_1 -> m_load_ordering_0 25
20 get_to truck_0 city_loc_2 -> m_drive_to_ordering_0 28
21 unload truck_0 city_loc_2 package_1 -> m_unload_ordering_0 31
<==
%TIME 0:00.27 36616
%EXIT 0
pandaPIparser is configured as follows
  Colors in output: false
  Mode: plan verification
  Verbosity: 1
  Lenient mode: false
  Ignore given order: false
Reading plan given as input
Parse instantiated task from " drive truck_0 city_loc_2 city_loc_1" ... done
Parsed action id=6 drive truck_0 city_loc_2 city_loc_1
Parse instantiated task from " pick_up truck_0 city_loc_1 package_0 capacity_0 capacity_1" ... done
Parsed action id=9 pick_up truck_0 city_loc_1 package_0 capacity_0 capacity_1
Parse instantiated task from " drive truck_0 city_loc_1 city_loc_0" ... done
Parsed action id=12 drive truck_0 city_loc_1 city_loc_0
Parse instantiated task from " drop truck_0 city_loc_0 package_0 capacity_0 capacity_1" ... done
Parsed action id=15 drop truck_0 city_loc_0 package_0 capacity_0 capacity_1
Parse instantiated task from " drive truck_0 city_loc_0 city_loc_1" ... done
Parsed action id=22 drive truck_0 city_loc_0 city_loc_1
Parse instantiated task from " pick_up truck_0 city_loc_1 package_1 capacity_0 capacity_1" ... done
Parsed action id=25 pick_up truck_0 city_loc_1 package_1 capacity_0 capacity_1
Parse instantiated task from " drive truck_0 city_loc_1 city_loc_2" ... done
Parsed action id=28 drive truck_0 city_loc_1 city_loc_2
Parse instantiated task from " drop truck_0 city_loc_2 package_1 capacity_0 capacity_1" ... done
Parsed action id=31 drop truck_0 city_loc_2 package_1 capacity_0 capacity_1
Size of primitive plan: 8
Reading list of integers from " 0 1"
Root tasks (2): 0 1
Reading plan given as input
Parse instantiated task from "  deliver package_0 city_loc_0" ... done
Parsed abstract task id=0 deliver package_0 city_loc_0
Parsed method name: m_deliver_ordering_0
Subtasks: 2 3 4 5

Parse instantiated task from "  get_to truck_0 city_loc_1" ... done
Parsed abstract task id=2 get_to truck_0 city_loc_1
Parsed method name: m_drive_to_ordering_0
Subtasks: 6

Parse instantiated task from "  load truck_0 city_loc_1 package_0" ... done
Parsed abstract task id=3 load truck_0 city_loc_1 package_0
Parsed method name: m_load_ordering_0
Subtasks: 9

Parse instantiated task from "  get_to truck_0 city_loc_0" ... done
Parsed abstract task id=4 get_to truck_0 city_loc_0
Parsed method name: m_drive_to_ordering_0
Subtasks: 12

Parse instantiated task from "  unload truck_0 city_loc_0 package_0" ... done
Parsed abstract task id=5 unload truck_0 city_loc_0 package_0
Parsed method name: m_unload_ordering_0
Subtasks: 15

Parse instantiated task from "  deliver package_1 city_loc_2" ... done
Parsed abstract task id=1 deliver package_1 city_loc_2
Parsed method name: m_deliver_ordering_0
Subtasks: 18 19 20 21

Parse instantiated task from "  get_to truck_0 city_loc_1" ... done
Parsed abstract task id=18 get_to truck_0 city_loc_1
Parsed method name: m_drive_to_ordering_0
Subtasks: 22

Parse instantiated task from "  load truck_0 city_loc_1 package_1" ... done
Parsed abstract task id=19 load truck_0 city_loc_1 package_1
Parsed method name: m_load_ordering_0
Subtasks: 25

Parse instantiated task from "  get_to truck_0 city_loc_2" ... done
Parsed abstract task id=20 get_to truck_0 city_loc_2
Parsed method name: m_drive_to_ordering_0
Subtasks: 28

Parse instantiated task from "  unload truck_0 city_loc_2 package_1" ... done
Parsed abstract task id=21 unload truck_0 city_loc_2 package_1
Parsed method name: m_unload_ordering_0
Subtasks: 31

Reached end of plan (marked).

Checking the given plan ...
IDs of subtasks used in the plan exist: true
Tasks declared in plan actually exist and can be instantiated as given: true
Methods don't contain duplicate subtasks: true
Methods don't contain orphaned tasks: true
Generating Matchings for task with id=0
 Matching Task 2 Curpos=0 #sources=1
 Task is: get_to truck_0 city_loc_1
 Attempting matching with source task0
  Setting ?v = truck_0
  Setting ?l1 = city_loc_1
   Matching Task 3 Curpos=1 #sources=1
   Task is: load truck_0 city_loc_1 package_0
   Attempting matching with source task1
    Setting ?v = truck_0
    Setting ?l1 = city_loc_1
    Setting ?p = package_0
     Matching Task 4 Curpos=2 #sources=1
     Task is: get_to truck_0 city_loc_0
     Attempting matching with source task2
      Setting ?v = truck_0
      Setting ?l2 = city_loc_0
       Matching Task 5 Curpos=3 #sources=1
       Task is: unload truck_0 city_loc_0 package_0
       Attempting matching with source task3
        Setting ?v = truck_0
        Setting ?l2 = city_loc_0
        Setting ?p = package_0
         Found compatible linearisation.
          Checking constants are in variable type ... 
          Checking method's constraint formula ... 
          Checking variable constraints in method's precondition ... 
          Matching is ok.
Found 1 matchings for task with id=0
Generating Matchings for task with id=1
 Matching Task 18 Curpos=0 #sources=1
 Task is: get_to truck_0 city_loc_1
 Attempting matching with source task0
  Setting ?v = truck_0
  Setting ?l1 = city_loc_1
   Matching Task 19 Curpos=1 #sources=1
   Task is: load truck_0 city_loc_1 package_1
   Attempting matching with source task1
    Setting ?v = truck_0
    Setting ?l1 = city_loc_1
    Setting ?p = package_1
     Matching Task 20 Curpos=2 #sources=1
     Task is: get_to truck_0 city_loc_2
     Attempting matching with source task2
      Setting ?v = truck_0
      Setting ?l2 = city_loc_2
       Matching Task 21 Curpos=3 #sources=1
       Task is: unload truck_0 city_loc_2 package_1
       Attempting matching with source task3
        Setting ?v = truck_0
        Setting ?l2 = city_loc_2
        Setting ?p = package_1
         Found compatible linearisation.
          Checking constants are in variable type ... 
          Checking method's constraint formula ... 
          Checking variable constraints in method's precondition ... 
          Matching is ok.
Found 1 matchings for task with id=1
Generating Matchings for task with id=2
 Matching Task 6 Curpos=0 #sources=1
 Task is: drive truck_0 city_loc_2 city_loc_1
 Attempting matching with source task0
  Setting ?v = truck_0
  Setting ?l1 = city_loc_2
  Setting ?l2 = city_loc_1
   Found compatible linearisation.
    Checking constants are in variable type ... 
    Checking method's constraint formula ... 
    Checking variable constraints in method's precondition ... 
    Matching is ok.
Found 1 matchings for task with id=2
Generating Matchings for task with id=3
 Matching Task 9 Curpos=0 #sources=1
 Task is: pick_up truck_0 city_loc_1 package_0 capacity_0 capacity_1
 Attempting matching with source task0
  Setting ?v = truck_0
  Setting ?l = city_loc_1
  Setting ?p = package_0
  Setting ?s1 = capacity_0
  Setting ?s2 = capacity_1
   Found compatible linearisation.
    Checking constants are in variable type ... 
    Checking method's constraint formula ... 
    Checking variable constraints in method's precondition ... 
    Matching is ok.
Found 1 matchings for task with id=3
Generating Matchings for task with id=4
 Matching Task 12 Curpos=0 #sources=1
 Task is: drive truck_0 city_loc_1 city_loc_0
 Attempting matching with source task0
  Setting ?v = truck_0
  Setting ?l1 = city_loc_1
  Setting ?l2 = city_loc_0
   Found compatible linearisation.
    Checking constants are in variable type ... 
    Checking method's constraint formula ... 
    Checking variable constraints in method's precondition ... 
    Matching is ok.
Found 1 matchings for task with id=4
Generating Matchings for task with id=5
 Matching Task 15 Curpos=0 #sources=1
 Task is: drop truck_0 city_loc_0 package_0 capacity_0 capacity_1
 Attempting matching with source task0
  Setting ?v = truck_0
  Setting ?l = city_loc_0
  Setting ?p = package_0
  Setting ?s1 = capacity_0
  Setting ?s2 = capacity_1
   Found compatible linearisation.
    Checking constants are in variable type ... 
    Checking method's constraint formula ... 
    Checking variable constraints in method's precondition ... 
    Matching is ok.
Found 1 matchings for task with id=5
Generating Matchings for task with id=7
 Matching Task 0 Curpos=0 #sources=1
 Task is: deliver package_0 city_loc_0
 Attempting matching with source task0
  Setting ?var_for_package_0 = package_0
  Setting ?var_for_city_loc_0 = city_loc_0
   Matching Task 1 Curpos=1 #sources=1
   Task is: deliver package_1 city_loc_2
   Attempting matching with source task1
    Setting ?var_for_package_1 = package_1
    Setting ?var_for_city_loc_2 = city_loc_2
     Found compatible linearisation.
      Checking constants are in variable type ... 
      Checking method's constraint formula ... 
      Checking variable constraints in method's precondition ... 
      Matching is ok.
Found 1 matchings for task with id=7
Generating Matchings for task with id=18
 Matching Task 22 Curpos=0 #sources=1
 Task is: drive truck_0 city_loc_0 city_loc_1
 Attempting matching with source task0
  Setting ?v = truck_0
  Setting ?l1 = city_loc_0
  Setting ?l2 = city_loc_1
   Found compatible linearisation.
    Checking constants are in variable type ... 
    Checking method's constraint formula ... 
    Checking variable constraints in method's precondition ... 
    Matching is ok.
Found 1 matchings for task with id=18
Generating Matchings for task with id=19
 Matching Task 25 Curpos=0 #sources=1
 Task is: pick_up truck_0 city_loc_1 package_1 capacity_0 capacity_1
 Attempting matching with source task0
  Setting ?v = truck_0
  Setting ?l = city_loc_1
  Setting ?p = package_1
  Setting ?s1 = capacity_0
  Setting ?s2 = capacity_1
   Found compatible linearisation.
    Checking constants are in variable type ... 
    Checking method's constraint formula ... 
    Checking variable constraints in method's precondition ... 
    Matching is ok.
Found 1 matchings for task with id=19
Generating Matchings for task with id=20
 Matching Task 28 Curpos=0 #sources=1
 Task is: drive truck_0 city_loc_1 city_loc_2
 Attempting matching with source task0
  Setting ?v = truck_0
  Setting ?l1 = city_loc_1
  Setting ?l2 = city_loc_2
   Found compatible linearisation.
    Checking constants are in variable type ... 
    Checking method's constraint formula ... 
    Checking variable constraints in method's precondition ... 
    Matching is ok.
Found 1 matchings for task with id=20
Generating Matchings for task with id=21
 Matching Task 31 Curpos=0 #sources=1
 Task is: drop truck_0 city_loc_2 package_1 capacity_0 capacity_1
 Attempting matching with source task0
  Setting ?v = truck_0
  Setting ?l = city_loc_2
  Setting ?p = package_1
  Setting ?s1 = capacity_0
  Setting ?s2 = capacity_1
   Found compatible linearisation.
    Checking constants are in variable type ... 
    Checking method's constraint formula ... 
    Checking variable constraints in method's precondition ... 
    Matching is ok.
Found 1 matchings for task with id=21
Methods can be instantiated: true
Check whether primitive plan is a linearisation of the orderings resulting from applied decomposition methods.
 Abstract Task id=7 matching still unique: true (1)
  Attempting matching
 Abstract Task id=0 matching still unique: true (1)
  Attempting matching
 Abstract Task id=2 matching still unique: true (1)
  Attempting matching
 Primitive Task id=6
  Ordering OK.
 Abstract Task id=3 matching still unique: true (1)
  Attempting matching
 Primitive Task id=9
  Ordering OK.
 Abstract Task id=4 matching still unique: true (1)
  Attempting matching
 Primitive Task id=12
  Ordering OK.
 Abstract Task id=5 matching still unique: true (1)
  Attempting matching
 Primitive Task id=15
  Ordering OK.
  Ordering OK.
 Abstract Task id=1 matching still unique: true (1)
  Attempting matching
 Abstract Task id=18 matching still unique: true (1)
  Attempting matching
 Primitive Task id=22
  Ordering OK.
 Abstract Task id=19 matching still unique: true (1)
  Attempting matching
 Primitive Task id=25
  Ordering OK.
 Abstract Task id=20 matching still unique: true (1)
  Attempting matching
 Primitive Task id=28
  Ordering OK.
 Abstract Task id=21 matching still unique: true (1)
  Attempting matching
 Primitive Task id=31
  Ordering OK.
  Ordering OK.
  Root Task, checking primitive executability ...
  Running exponential top-sort.
  The current state is:
     at package_0 city_loc_1
     at package_1 city_loc_1
     at truck_0 city_loc_2
     capacity truck_0 capacity_1
     capacity_predecessor capacity_0 capacity_1
     road city_loc_0 city_loc_1
     road city_loc_1 city_loc_0
     road city_loc_1 city_loc_2
     road city_loc_2 city_loc_1
   Executing plan time=1 #sources=1
    Source 7 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 0 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 2 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 6 is a primitive action.
    Action has an effect.
    Performed all sources that can be taken greedily. 1 sources remain. unique=true
    Attempting to progress through source 6
    Task is: drive truck_0 city_loc_2 city_loc_1
    Applying effects of the action.
     Removing fact from state: at truck_0 city_loc_2
     Adding fact to state: at truck_0 city_loc_1
    The new state is:
      at package_0 city_loc_1
      at package_1 city_loc_1
      at truck_0 city_loc_1
      capacity truck_0 capacity_1
      capacity_predecessor capacity_0 capacity_1
      road city_loc_0 city_loc_1
      road city_loc_1 city_loc_0
      road city_loc_1 city_loc_2
      road city_loc_2 city_loc_1
   Executing plan time=1 #sources=1
    Source -7 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -3 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 3 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 9 is a primitive action.
    Action has an effect.
    Performed all sources that can be taken greedily. 1 sources remain. unique=true
    Attempting to progress through source 9
    Task is: pick_up truck_0 city_loc_1 package_0 capacity_0 capacity_1
    Applying effects of the action.
     Removing fact from state: at package_0 city_loc_1
     Removing fact from state: capacity truck_0 capacity_1
     Adding fact to state: capacity truck_0 capacity_0
     Adding fact to state: in package_0 truck_0
    The new state is:
      at package_1 city_loc_1
      at truck_0 city_loc_1
      capacity truck_0 capacity_0
      capacity_predecessor capacity_0 capacity_1
      in package_0 truck_0
      road city_loc_0 city_loc_1
      road city_loc_1 city_loc_0
      road city_loc_1 city_loc_2
      road city_loc_2 city_loc_1
   Executing plan time=1 #sources=1
    Source -10 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -4 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 4 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 12 is a primitive action.
    Action has an effect.
    Performed all sources that can be taken greedily. 1 sources remain. unique=true
    Attempting to progress through source 12
    Task is: drive truck_0 city_loc_1 city_loc_0
    Applying effects of the action.
     Removing fact from state: at truck_0 city_loc_1
     Adding fact to state: at truck_0 city_loc_0
    The new state is:
      at package_1 city_loc_1
      at truck_0 city_loc_0
      capacity truck_0 capacity_0
      capacity_predecessor capacity_0 capacity_1
      in package_0 truck_0
      road city_loc_0 city_loc_1
      road city_loc_1 city_loc_0
      road city_loc_1 city_loc_2
      road city_loc_2 city_loc_1
   Executing plan time=1 #sources=1
    Source -13 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -5 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 5 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 15 is a primitive action.
    Action has an effect.
    Performed all sources that can be taken greedily. 1 sources remain. unique=true
    Attempting to progress through source 15
    Task is: drop truck_0 city_loc_0 package_0 capacity_0 capacity_1
    Applying effects of the action.
     Removing fact from state: capacity truck_0 capacity_0
     Removing fact from state: in package_0 truck_0
     Adding fact to state: at package_0 city_loc_0
     Adding fact to state: capacity truck_0 capacity_1
    The new state is:
      at package_0 city_loc_0
      at package_1 city_loc_1
      at truck_0 city_loc_0
      capacity truck_0 capacity_1
      capacity_predecessor capacity_0 capacity_1
      road city_loc_0 city_loc_1
      road city_loc_1 city_loc_0
      road city_loc_1 city_loc_2
      road city_loc_2 city_loc_1
   Executing plan time=1 #sources=1
    Source -16 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -6 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -1 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 1 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 18 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 22 is a primitive action.
    Action has an effect.
    Performed all sources that can be taken greedily. 1 sources remain. unique=true
    Attempting to progress through source 22
    Task is: drive truck_0 city_loc_0 city_loc_1
    Applying effects of the action.
     Removing fact from state: at truck_0 city_loc_0
     Adding fact to state: at truck_0 city_loc_1
    The new state is:
      at package_0 city_loc_0
      at package_1 city_loc_1
      at truck_0 city_loc_1
      capacity truck_0 capacity_1
      capacity_predecessor capacity_0 capacity_1
      road city_loc_0 city_loc_1
      road city_loc_1 city_loc_0
      road city_loc_1 city_loc_2
      road city_loc_2 city_loc_1
   Executing plan time=1 #sources=1
    Source -23 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -19 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 19 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 25 is a primitive action.
    Action has an effect.
    Performed all sources that can be taken greedily. 1 sources remain. unique=true
    Attempting to progress through source 25
    Task is: pick_up truck_0 city_loc_1 package_1 capacity_0 capacity_1
    Applying effects of the action.
     Removing fact from state: at package_1 city_loc_1
     Removing fact from state: capacity truck_0 capacity_1
     Adding fact to state: capacity truck_0 capacity_0
     Adding fact to state: in package_1 truck_0
    The new state is:
      at package_0 city_loc_0
      at truck_0 city_loc_1
      capacity truck_0 capacity_0
      capacity_predecessor capacity_0 capacity_1
      in package_1 truck_0
      road city_loc_0 city_loc_1
      road city_loc_1 city_loc_0
      road city_loc_1 city_loc_2
      road city_loc_2 city_loc_1
   Executing plan time=1 #sources=1
    Source -26 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -20 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 20 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 28 is a primitive action.
    Action has an effect.
    Performed all sources that can be taken greedily. 1 sources remain. unique=true
    Attempting to progress through source 28
    Task is: drive truck_0 city_loc_1 city_loc_2
    Applying effects of the action.
     Removing fact from state: at truck_0 city_loc_1
     Adding fact to state: at truck_0 city_loc_2
    The new state is:
      at package_0 city_loc_0
      at truck_0 city_loc_2
      capacity truck_0 capacity_0
      capacity_predecessor capacity_0 capacity_1
      in package_1 truck_0
      road city_loc_0 city_loc_1
      road city_loc_1 city_loc_0
      road city_loc_1 city_loc_2
      road city_loc_2 city_loc_1
   Executing plan time=1 #sources=1
    Source -29 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -21 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 21 is the begin of an abstract task.
    Evaluating the method precondition
    Method has no effect.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source 31 is a primitive action.
    Action has an effect.
    Performed all sources that can be taken greedily. 1 sources remain. unique=true
    Attempting to progress through source 31
    Task is: drop truck_0 city_loc_2 package_1 capacity_0 capacity_1
    Applying effects of the action.
     Removing fact from state: capacity truck_0 capacity_0
     Removing fact from state: in package_1 truck_0
     Adding fact to state: at package_1 city_loc_2
     Adding fact to state: capacity truck_0 capacity_1
    The new state is:
      at package_0 city_loc_0
      at package_1 city_loc_2
      at truck_0 city_loc_2
      capacity truck_0 capacity_1
      capacity_predecessor capacity_0 capacity_1
      road city_loc_0 city_loc_1
      road city_loc_1 city_loc_0
      road city_loc_1 city_loc_2
      road city_loc_2 city_loc_1
   Executing plan time=1 #sources=1
    Source -32 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -22 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -2 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=1
    Source -8 is a dummy for the end of a task.
    I can greedily take this source without making any mistake.
   Executing plan time=1 #sources=0
   Executed the whole plan ... checking whether we reached the goal state.
   The current state is:
      at package_0 city_loc_0
      at package_1 city_loc_2
      at truck_0 city_loc_2
      capacity truck_0 capacity_1
      capacity_predecessor capacity_0 capacity_1
      road city_loc_0 city_loc_1
      road city_loc_1 city_loc_0
      road city_loc_1 city_loc_2
      road city_loc_2 city_loc_1
  Executable linearisation found.
  Ordering OK.
Result true true
Order induced by methods is present in plan: true
Plan is executable: true
Plan verification result: true
